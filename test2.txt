Create an Azure-Portal Vue application for: {instructions}

GOAL (EXACT LAYOUT):
- Build a pixel-accurate Layout Rules (Critical)
- No overlay: Sidebar never overlays main content
- Proper margins: Always equal to sidebar width
- Responsive: Adjust margin when collapsed
- Z-index layers: Header (50), Sidebar (40), Main (10)
- Content flow: Vertical alignment, consistent spacing
- **HEADER POSITIONING**: 
  - TopBar uses position: fixed with width: 100%
  - Main content must have padding-top: 48px (exact header height)
  - Dashboard sections must start below headersentation of the Azure Portal interface
- Brand-neutral but maintain the exact visual hierarchy and spacing
- Fixed header and sidebar dimensions, with flexible content areas

## A. Top Header Bar (Fixed Height: 48px)
- Left: Hamburger menu (collapse sidebar), Brand logo, when click to logo route to /
- Center: Global search bar with placeholder "Search resources, services, and docs (G+/)"
  - Search bar ALWAYS centered
  - Minimum width: 580px
- Right: Notification bell, settings gear, help icon, user profile
  - ALL must link to actual routes
- Background:
  - If {instructions} provide header color, use it
  - Else use gradient: #0078d4 → #106ebe
- Text: White
- **CRITICAL POSITIONING**: 
  - Header MUST use position: fixed, width: 100%, top: 0, left: 0
  - z-index: 50 (highest in the application)
  - Subtle box-shadow: 0 2px 4px rgba(0,0,0,0.1)
  - Main content MUST start with padding-top: 48px to prevent overlay
- **IMPORTANT**:
  - Use basic icons (Menu, Search, Bell, Settings, HelpCircle, User)

## B. Left Sidebar (Fixed Width: 220px expanded, 48px collapsed)
- **Primary Actions Section**
  - Create a resource (Plus icon)
  - Home (Home icon)
  - Dashboard (BarChart2 icon)
  - All services (Grid icon) - **Links to /services**

- **Favorites Section** (collapsible group header)
  Default example items if {instructions} do not provide favorites:
  - Create a resource (Plus icon)
  - All resources (Layers icon)
  - Resource groups (Folder icon)
  - App Services (Globe icon)
  - Key vault (Key icon)
  - Storage accounts (Database icon)

- Behavior:
  - Full viewport height
  - Independent scroll
  - White background
  - **CRITICAL**: Collapsed sections must NOT overlay other sidebar content, All collapsible sections must use proper overflow handling
- **Critical Z-Index**: Sidebar (40), must NOT overlay main content
- **Critical Overflow Handling**:
  - Sidebar must use overflow-y: auto for scrolling
  - Favorites section must maintain sidebar width when collapsed/expanded, Favorites text must disappear when collapsed
  - When collapsed, all icons must be centered by align middle and align center
- **Critical Navigation**:
  - All links must link to actual routes
- **IMPORTANT**:
  - Use a limited set of essential icons (Plus, Home, BarChart2, Grid, Layers, Folder, Globe, Key, Database)

## C. Main Content Area
- **DEFAULT LAYOUT** IF {instructions} DO NOT PROVIDE MAIN CONTENT:
- Content Container:
  - Left margin 220px (expanded), 48px (collapsed)
  - Sidebar must never overlay content
  - **CRITICAL**: Must have padding-top: 48px to account for fixed header
  - Position: relative with z-index: 10 (below header and sidebar)
- Content Padding: 
  - 24px horizontal padding
  - 24px top padding AFTER the 48px header offset
- Responsive:
  - Adjusts margin when sidebar collapses
- Layout Structure:
  - Main wrapper: min-height: calc(100vh - 48px) to account for header
  - Content area: flex-1, display: flex, flex-direction: column

## D. Dashboard Page - Content Sections
- Content sections should appear below the fixed header
- Always include padding-top: 24px (after the 48px header offset)
- Each section should have appropriate spacing between them
- Use appropriate heading levels for section titles
- Main dashboard content should be organized in a clear visual hierarchy
- Use standard design patterns for displaying information
- If {instructions} provide specific dashboard content, follow those requirements

## Content Section Guidelines
- Use proper semantic HTML for all elements
- When displaying tabular data, use proper HTML table structure
- Use consistent spacing and alignment throughout
- Ensure all content is visible without overlapping
- Apply appropriate styling for interactive elements like buttons and links
- Create a responsive layout that adjusts to different screen sizes

## All Services Page Layout (/services)
- Title: "All services"
- Breadcrumb: Home > All services
- Always include margin-top: 48px to clear the fixed header
- Include appropriate filtering and search functionality
- Organize services in a grid or list layout based on {instructions}

## Fixed Dimensions & Spacing
- Header height: 48px (z-index: 50)
- Sidebar width: 220px expanded, 48px collapsed (z-index: 40)
- Main content margin: 220px (expanded), 48px (collapsed)
- Content padding: 24px horizontal
- Section vertical spacing: 24px

## Layout Rules (Critical)
- No overlay: Sidebar never overlays main content
- Proper margins: Always equal to sidebar width
- Responsive: Adjust margin when collapsed
- Z-index layers: Header (50), Sidebar (40), Main (10)
- Content flow: Vertical alignment, consistent spacing
- **HEADER POSITIONING**: 
  - TopBar uses position: fixed, width: 100%
  - Main content must have padding-top: 48px (exact header height)
  - Dashboard services section must start below header
  
## Sidebar Critical Rules (Must Follow)
- **INTERNAL SIDEBAR HIERARCHY**: 
  - Sidebar container: position: fixed, z-index: 40
  - Collapsed/expanded sections must not affect sidebar container position
  - Collapsible sections: overflow: hidden with height transition
  - Favorites section: Must contain ALL content, no overflow outside container
  - Dropdown chevron: position: absolute, no effect on container layout
- **SCROLLING BEHAVIOR**:
  - Sidebar scrolls independently with overflow-y: auto
  - Inner content overflow must not affect outer sidebar layout
  - Main content must scroll independently from sidebar
- **NO CONTENT OVERLAP**:
  - Text content must not overflow its container
  - Icon and text must align properly with sufficient spacing
  - Dropdown indicators must not overlap text (min 8px gap)

## EXACT COLORS (FROM REFERENCE):
:root {
  /* Header */
  --header-bg: linear-gradient(90deg, #0078d4 0%, #106ebe 100%);
  --header-text: #ffffff;
  --header-height: 48px;
  --header-z-index: 50;
  --header-shadow: 0 2px 4px rgba(0,0,0,0.1);
  
  /* Sidebar */
  --sidebar-bg: #ffffff;
  --sidebar-text: #323130;
  --sidebar-hover: #f3f2f1;
  --sidebar-active: #edebe9;
  --sidebar-width-expanded: 220px;
  --sidebar-width-collapsed: 48px;
  --sidebar-z-index: 40;
  
  /* Content */
  --content-bg: #faf9f8;
  --content-z-index: 10;
  --content-padding: 24px;
  --content-top-offset: 48px; /* Same as header height */
  --surface: #ffffff;
  --text-primary: #323130;
  --text-secondary: #605e5c;
  --border: #edebe9;
  
  /* Service tiles */
  --tile-bg: #ffffff;
  --tile-border: #edebe9;
  --tile-hover: #f3f2f1;
  --card-shadow-hover: 0 4px 8px rgba(0,0,0,0.1);
}

## SIMPLIFIED ICON USAGE
1. Import only the icons you need in each component:
   ```vue
   <script setup>
   import { Home, Settings as SettingsIcon, Bell, User, Search } from 'lucide-vue-next';
   </script>
   ```
2. Focus on essential icons for the header and sidebar:
   ```vue
   <script setup>
   // Essential icons for header
   import { Menu, Search, Bell, Settings as SettingsIcon, HelpCircle, User } from 'lucide-vue-next';
   
   // Essential icons for sidebar
   import { Home, Plus, BarChart2, Grid, Layers, Folder, Globe, Key, Database } from 'lucide-vue-next';
   </script>
   ```
3. Always rename the Settings icon to SettingsIcon to avoid conflicts:
   ```vue
   <script setup>
   import { Settings as SettingsIcon } from 'lucide-vue-next';
   </script>
   ```
4. Use a central utility file only for the most common icons:
   ```js
   // In src/utils/icons.js or icons.ts
   import { 
     // Essential header icons
     Menu, Search, Bell, Settings as SettingsIcon, HelpCircle, User,
     // Essential sidebar icons
     Home, Plus, BarChart2, Grid, Layers, Folder, Globe, Key, Database,
     // Essential UI icons
     ChevronDown, ChevronUp, ArrowRight
   } from 'lucide-vue-next';
   
   // Re-export only essential icons
   export {
     Menu, Search, Bell, SettingsIcon, HelpCircle, User,
     Home, Plus, BarChart2, Grid, Layers, Folder, Globe, Key, Database,
     ChevronDown, ChevronUp, ArrowRight
   };
   ```

## Behavior Requirements
- Sidebar collapse toggles width + adjusts main margin
- Search functionality in header
- Header nav routes:
  - Bell → /notifications
  - Settings → /settings  
  - User profile → /profile
  - Help → /help
- Layout integrity: Content never overlaps sidebar

## Recommended Icon List (Simplified)
Only use these essential icons:
- Header: Menu, Search, Bell, SettingsIcon, HelpCircle, User
- Sidebar: Home, Plus, BarChart2, Grid, Layers, Folder, Globe, Key, Database
- UI Controls: ChevronDown, ChevronUp, ArrowRight

## TECH STACK (DYNAMIC BASED ON INPUT):
- Core: vue@^3.3.0, vue-router@^4.2.0, pinia@^2.1.0
- Icons: lucide-vue-next@^0.190.0
- Styling: tailwindcss@^3.4.0, @tailwindcss/forms@^0.5.6, autoprefixer@^10.4.16
- Build: vite@^5.0.0, @vitejs/plugin-vue@^4.5.0
- TypeScript (if {language} === "typescript"): vue-tsc@^1.8.0, @types/node@^20.2.0, typescript@^5.2.0

## Output Format (JSON Only)
Return ONLY valid JSON with properly escaped strings:
{
  "project_name": "{project_name}",
  "framework": "{framework}",
  "language": "{language}",
  "instructions": "Azure Portal with {instructions}",
  "files": {
    "package.json": "Vue 3.3+ with exact versions, type:module, ALWAYS include script to run dev server, proper dependencies based on {language}",
    "index.html": "HTML5 with meta viewport, neutral favicon, ALWAYS include script leading to src/main.{main_ext}",
    "vite.config.{file_ext}": "Vite config with Vue plugin and server: {{host: true, cors: true, allowedHosts: true}} - KEEP allowedHosts as boolean true",
    "tailwind.config.js": "Exact color tokens, fixed dimensions, consistent icon sizes*, keep plugins empty for now",
    "postcss.config.js": "PostCSS config for Tailwind", {config_files}
    "src/main.{main_ext}": "Vue 3 entry point with createApp, extension based on {language}",
    "src/App.vue": "App shell with vue-router, <router-view>, INCLUDING /services route",
    "src/index.css": "Global styles with Tailwind, Exact Azure Portal colors, fixed dimensions, NO sidebar overlay, CRITICAL padding-top for content",
    "src/components/layout/PortalLayout.vue": "Fixed sidebar, main content with proper left margin (220px/48px) AND padding-top: 48px for header clearance, position: relative, z-index: 10",
    "src/components/navigation/TopBar.vue": "Blue gradient header with position: fixed, width: 100%, top: 0, left: 0, z-index: 50, height: 48px, box-shadow for subtle depth",
    "src/components/navigation/Sidebar.vue": "Fixed width, limited favorites, proper z-index: 40, NO content overlay, height: 100vh, position: fixed",
    "src/views/NotFound.vue": "404 page with proper layout",
    "src/views/Dashboard.vue": "Dashboard page with content areas",
    "src/views/Profile.vue": "Profile page with proper layout",
    "src/views/AllServices.vue": "All Services page with proper layout",
    "src/views/Help.vue": "Help page with proper layout",
    "src/views/Settings.vue": "Settings page with proper layout",
    "src/utils/icons.js": "Utility file for essential icons (header and sidebar only)"
  }
}

## Critical Requirements
- FIXED HEADER: TopBar MUST use position:fixed with z-index:50
- CONTENT OFFSET: Main content MUST have padding-top:48px to clear the header
- NO HEADER OVERLAY: Content MUST appear below header, never behind it
- NO SIDEBAR OVERLAY: Main content must have left margin equal to sidebar width
- Proper Z-Index: Header (50), Sidebar (40), Content (10) with NO overlaps
- Responsive Margins: Main content margin adjusts when sidebar expands/collapses
- Consistent Layout: Sections spaced uniformly, no overlaps
- Navigation: All links must route correctly
- /services must render complete AllServices page
- Use only essential icons for header and sidebar
- TABLE STRUCTURE: Always use proper HTML <table> elements for tabular data, never flexbox
- COMPONENT MODULARITY: Create small, reusable components for recurring UI elements

## CRITICAL FILE STRUCTURE RULES
1. File structure MUST be consistent and correct for Vue components:
   - Vue components MUST use .vue extension for Single-File Components
   - Utility files should use .js or .ts based on language choice
2. ALL Vue component files MUST follow Single-File Component format:
   - src/App.vue: Main app component
   - src/components/**/*.vue: UI components
   - src/views/**/*.vue: Page views (routed components)
3. Component imports MUST use proper syntax:
   - import ComponentName from './ComponentName.vue';
4. NON-NEGOTIABLE: Vue components must use Single-File Component format with:
   - <template> section (HTML markup)
   - <script setup> section (Composition API preferred)
   - <style> section (with scoped attribute when appropriate)
5. ALWAYS use proper Vue 3 imports:
   - import { ref, computed, onMounted } from 'vue';
   - import { useRoute, useRouter } from 'vue-router';
   - import { useStore } from 'pinia';
6. DON'T USE option API, always use composition API with script setup
7. UTILITIES FILE: MUST use proper import/export syntax